{
    "ro": [
        {
            "desc": "Să se citească trei valori ```a```, ```b``` și ```c``` de la tastatură iar apoi să se calculeze rezultatul ecuației: $b^2 - 4ac$\n> Indiciu: se pot utiliza funcțiile Math.sqrt() și Math.pow()",
            "id": "1",
            "solution": "// citim numerele a, b si c de la utilizator\nlet a = parseInt(prompt('a='));\nlet b = parseInt(prompt('b='));\nlet c = parseInt(prompt('c='));\n\n// calculam ecuatia folosind Math.pow() si Math.sqrt()\nconsole.log(Math.pow(b, 2) - Math.sqrt(4 * a * c))",
            "code": "// citim numerele a, b si c de la utilizator\n\n// calculam ecuatia folosind Math.pow() si Math.sqrt()"
        },
        {
            "desc": "Să se citească de la tastatură lungimea laturii unui triunghi echilateral și să se stocheze în variabila ```a``` iar apoi să se afișeze lungimea înălțimii triunghiului precum și aria sa folosind formulele:\n\n $$h={\\frac{\\sqrt{3}}2}a, A={\\frac{\\sqrt{3}}4}a^2$$",
            "id": "2",
            "solution": "// citim latura triunghiului de la utilizator si o stocam in variabila a\nlet a = parseInt(prompt('a='));\n\n// calculam inaltimea si aria folosind formulele date\nconsole.log(\"Inaltimea:\", Math.sqrt(3) / 2 * a)\nconsole.log(\"Aria:\", Math.sqrt(3) / 4 * Math.pow(a, 2))",
            "code": "// citim latura triunghiului de la utilizator si o stocam in variabila a\n\n// calculam inaltimea si aria folosind formulele date"
        },
        {
            "desc": "Să se scrie o funcție care determină dacă un număr este prim. Să se testeze folosind numere citite de la tastatură.",
            "id": "3",
            "solution": "// cream o functie care ne va intoarce true daca numarul primit ca parametru este prim sau false in caz contrar\nfunction estePrim(numar) {\n    // parcurgem toti divizorii posibili de la 2 pana la numar / 2\n    for (let divizor = 2; divizor <= numar / 2; divizor++) {\n        // daca numarul este divizibil atunci nu este prim\n        if (numar % divizor == 0)\n            // intoarcem rezultatul si totodata intrerupem bucla fortat\n            return false;\n    }\n\n    return true;\n}\n\n// citim un numar de la utilizator\nlet numar = parseInt(prompt('Numar= '));\n\n// apelam functia si observam rezultatul\nconsole.log(estePrim(numar));",
            "code": "// cream o functie care ne va intoarce true daca numarul primit ca parametru este prim sau false in caz contrar\n\n    // parcurgem toti divizorii posibili de la 2 pana la numar / 2\n\n        // daca numarul este divizibil atunci nu este prim\n\n// citim un numar de la utilizator\n\n// apelam functia si observam rezultatul"
        },
        {
            "desc": "Folosind funcția creată mai sus, să se afișeze toate numerele prime de la ```1``` la ```n``` unde ```n``` este citit de la utilizator.",
            "id": "4",
            "solution": "// folosim functia creata la exercitiul precedent\nfunction estePrim(numar) {\n    // parcurgem toti divizorii posibili de la 2 pana la numar / 2\n    for (let divizor = 2; divizor <= numar / 2; divizor++) {\n        // daca numarul este divizibil atunci nu este prim\n        if (numar % divizor == 0)\n            // intoarcem rezultatul si totodata intrerupem bucla fortat\n            return false;\n    }\n\n    return true;\n}\n\n// citim un numar natural n de la utilizator\nlet n = parseInt(prompt('n='));\n\n// parcurgem toate numerele de la 1 la n si testam daca sunt prime prin apel al functiei estePrim\nfor (let numar = 1; numar <= n; numar++) {\n    if (estePrim(numar))\n        console.log('Numarul', numar, 'este prim');\n}",
            "code": "// copiem functia creata la exercitiul precedent\n\n// citim un numar natural n de la utilizator\n\n// parcurgem toate numerele de la 1 la n si testam daca sunt prime prin apel al functiei estePrim"
        },
        {
            "desc": "Să se afișeze toate cuburile perfecte (AxAxA) mai mici decât un număr n citit de la tastatură\n> Indiciu: se poate utiliza funcția Math.cbrt() pentru a determina rădăcina cubică",
            "id": "5",
            "code": "// citim un numar natural n de la utilizator",
            "solution": "// citim un numar natural n de la utilizator\nlet numar = prompt(\"n = \");\n\n// folosind un contor de la 1 la cbrt(n) generam toate cuburile perfecte\nfor (let a = 1; a <= Math.cbrt(numar); a++) {\n    console.log(Math.pow(a, 3));\n}"
        },
        {
            "desc": "Să se calculeze cel mai mic pătrat perfect, strict mai mare decât un numar natural n.\n> Exemplu: n = 24, se afiseaza 25 (5x5); n = 31, se afiseaza 36 (6x6)",
            "id": "6",
            "code": "// citim un numar natural n de la utilizator\n\n// folosim Math.sqrt, Math.ceil si Math.pow pentru a calcula urmatorul patrat perfect",
            "solution": "// citim un numar natural n de la utilizator\nlet numar = prompt(\"n = \");\n\n// folosim Math.sqrt, Math.ceil si Math.pow pentru a calcula urmatorul patrat perfect\nconsole.log(Math.pow(Math.ceil(Math.sqrt(numar)), 2))"
        },
        {
            "desc": "Să se verifice dacă există trei numere naturale consecutive, care adunate, dau numărul n.\n> Exemplu: n = 12, se afiseaza 3 4 5; n = 13, se afiseaza Nu exista asemenea secventa",
            "id": "7",
            "code": "// citim un numar natural n de la utilizator\n\n// o asemenea secventa trebuie sa se poata scrie ca n = i + i+1 + i+2 adica i = (n-3) / 3 trebuie sa fie numar natural",
            "solution": "// citim un numar natural n de la utilizator\nlet numar = prompt(\"n = \");\n\n// o asemenea secventa trebuie sa se poata scrie ca n = i + i+1 + i+2 adica i = (n-3) / 3 trebuie sa fie numar natural\n// pentru a verifica daca un numar este natural testam daca numarul este egal cu Math.floor(numar)\nlet i = (numar - 3) / 3;\n\nif (i == Math.floor(i)) {\n  console.log('Gasit', i, i+1, i+2)\n} else {\n  console.log('Nu exista asemenea secventa')\n}"
        },
        {
            "desc": "Să se determine dacă n se poate scrie ca sumă de k numere naturale consecutive unde n si k sunt două numere naturale citite de la tastatură.\n> Exemplu: n = 18, se afiseaza 3 4 5 6; n = 16, se afiseaza Nu exista asemenea secventa",
            "id": "8",
            "code": "// citim doua numere naturale n si k de la utilizator\n\n// o asemenea secventa trebuie sa se poata scrie ca n = i + i+1 + i+2 adica i = (n-3) / 3 trebuie sa fie numar natural\n// calculam suma numerelor de la 1 la k-1\n\n// calculam i folosind formula i = (numar - sum) / k\n\n// iar pentru a verifica daca un numar este natural testam daca numarul este egal cu Math.floor(numar)",
            "solution": "// citim doua numere naturale n si k de la utilizator\nlet numar = prompt(\"n = \");\nlet k = prompt(\"k = \");\n\n// o asemenea secventa trebuie sa se poata scrie ca n = i + i+1 + i+2 + ... + i+k-1 adica i = (n- sum(1..k-1)) / k trebuie sa fie numar natural\n// calculam suma numerelor de la 1 la k-1\nlet sum = ((k-1)*k) / 2;\n\n// calculam i folosind formula i = (numar - sum) / k\nlet i = (numar - sum) / k\n\n// iar pentru a verifica daca un numar este natural testam daca numarul este egal cu Math.floor(numar)\nif (i == Math.floor(i)) {\n    console.log('Gasit');\n    for (let it = i; it < i + k; it++) {\n        console.log(it);\n    }\n} else {\n    console.log('Nu exista asemenea secventa')\n}"
        }
    ],
    "src-ro": "functii.ro.snip"
}