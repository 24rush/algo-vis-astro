{"ro": [{"desc": "creare vector", "id": "0", "code": "let vector = [1, 2, 3, 4];\nconsole.log(vector[0]);\nconsole.log(vector[1]);"}, {"desc": "parcurgere vector", "id": "1", "code": "let vector = [\"A\", \"B\", \"C\"];\nfor (let i = 0; i < vector.length; i++) {\n    console.log(vector[i]);\n}"}, {"desc": "", "id": "4", "code": "let vector = [\"A\", \"B\", \"C\"];\nfor (let value of vector) {\n    console.log(value);\n}"}, {"desc": "", "id": "5", "code": "let vector = [\"A\", \"B\", \"C\"];\nfor (let index in vector) {\n    console.log(index);\n}"}, {"desc": "metode vector", "id": "2", "code": "let vectorA = [1, 2, 3, 4];\nlet vectorB = [11, 12, 13, 14, 15];\n\nconsole.log('Lungimea vectorului A este: ' + vectorA.length);\n\nvectorA.push(5); /*** Adaugăm o valoare nouă la sfârșitul colecției ***/\nconsole.log('Lungimea vectorului A este acum: ' + vectorA.length);\n\nvectorA[0] = 7; /*** Modificăm o valoare existentă ***/\nconsole.log(vectorA);\n\nlet vectorC = vectorA.concat(vectorB);\nconsole.log('Lungimea vectorului C este: ' + vectorC.length);\n\nlet ultimulElement = vectorC.pop();\nconsole.log('Ultimul element din vectorC a fost: ' + ultimulElement);\n\nlet sectiune = vectorC.slice(0, 3); /*** Extragem elementele dintre indexul 0 si 3 ***/\nconsole.log(sectiune);\n\nlet reverse = vectorC.reverse();\nconsole.log(reverse);\n\nconsole.log('Poziția elementului 2 este: ' + reverse.indexOf(2));"}, {"desc": "stergere din vector", "id": "3", "code": "let x = [1, -12, 3, 5, 2]\n\nlet poz = x.indexOf(2); /*** Căutam poziția elementului cu valoarea 2 ***/\n\nif (poz != -1) { /*** Dacă am găsit cu element cu valoarea 2 ***/\n    x.splice(poz, 1); /*** Ștergem un element începând cu poziția pe care l-am găsit ***/\n}"}], "src-ro": "vectori\\basics.ro.snip"}