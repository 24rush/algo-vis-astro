---
import { SITE } from "../../config";
import SkipToContent from "./SkipToContent.astro";

const { currentPage } = Astro.props;
---

<header class="p-3 bg-opacity-80 backdrop-blur-md border-b text-slate-900">
  <SkipToContent />
  <nav
    title="Top Navigation"
    class="mx-auto flex justify-between items-center px-2"
  >
    <div style="display:flex; flex-direction: row; align-items: center;">
      <div class="menu-button-mobile px-1" style="padding-bottom: 12px;">
        <input id="menu__toggle" type="checkbox" />
        <label class="menu__btn" for="menu__toggle">
          <span></span>
        </label>
      </div>
      <a
        class="text-lg font-medium"
        style="padding-left: 8px; padding-right: 12px;"
        href="/"
      >
        <h1>
          {SITE.title}
          <i class="text-slate-400" style="font-size: small;">beta</i>
        </h1>
      </a>

      {
        SITE.instagram && (
          <a
            title="Instagram"
            class="opacity-80 hover:opacity-100 hover:bg-slate-200 p-2 rounded-full transition-colors"
            href={"https://www.instagram.com/" + SITE.instagram}
          >
            <i class="bi bi-instagram" />
          </a>
        )
      }

      {
        SITE.discord && (
          <a
            title="Discord"
            class="opacity-80 hover:opacity-100 hover:bg-slate-200 p-2 rounded-full transition-colors"
            href={"https://discord.gg/" + SITE.discord}
          >
            <i class="bi bi-discord" />
          </a>
        )
      }

      {
        SITE.github && (
          <a
            title="Github"
            class="opacity-80 hover:opacity-100 hover:bg-slate-200 p-2 rounded-full transition-colors"
            href={"https://github.com/" + SITE.github}
          >
            <img class="h-7" src="/github.svg" alt="github logo" />
          </a>
        )
      }
      {
        SITE.linkedin && (
          <a
            title="linkedin"
            class="opacity-80 hover:opacity-100 hover:bg-blue-50 p-2 rounded-full transition-colors"
            href={"https://linkedin.com/in/" + SITE.linkedin}
          >
            <img class="h-7" src="/linkedin.svg" alt="linkedin logo" />
          </a>
        )
      }
    </div>

    <div class="flex gap-2">
      <a
        href="https://docs.google.com/forms/d/e/1FAIpQLSe4ka9gVCW-608C8zcbWa2Dx-vdgzdzb1U1qTGLgx1Cphb2jA/viewform"
        title="Ofera feedback"
        class="opacity-80 hover:opacity-100 hover:bg-slate-200 p-2 rounded-full transition-colors"
      >
        <i class="bi bi-lightbulb"></i>
      </a>

      <button
        title="Focus mode"
        id="btnFocusMode"
        class="menu-button-desktop opacity-80 hover:opacity-100 hover:bg-slate-200 p-2 rounded-full transition-colors"
      >
        <i class="bi bi-bullseye"></i>
      </button>
    </div>
  </nav>

  <script is:inline>
    document
      .querySelector("#btnFocusMode")
      .addEventListener("click", (elem) => {
        let toggleElementVisibility = (elemClassName) => {
          let leftSidebar = document.querySelector(elemClassName);
          if (leftSidebar) {
            let isHidden = leftSidebar.classList.contains("hide");

            if (!isHidden) {
              leftSidebar.classList.add("hide");
              leftSidebar.style.setProperty("display", "none", "important");
            } else {
              leftSidebar.classList.remove("hide");
              leftSidebar.style.removeProperty("display");
            }
          }
        };

        toggleElementVisibility(".col-span-left-mobile");
        toggleElementVisibility(".col-span-right-mobile");

        if (elem && elem.target) {
          !elem.target.classList.contains("focus-on")
            ? elem.target.classList.add("focus-on")
            : elem.target.classList.remove("focus-on");
        }
      });
  </script>

  <style scoped>
    .focus-on {
      color: var(--bs-blue);
    }

    .menu-button-mobile {
      display: none !important;
    }

    .menu-button-desktop {
      display: flex !important;
    }

    @media (max-width: 968px) {
      .menu-button-mobile {
        display: flex !important;
      }
      .menu-button-desktop {
        display: none !important;
      }
    }

    #menu__toggle {
      opacity: 0;
      display: none;
    }
    #menu__toggle:checked + .menu__btn > span {
      transform: rotate(45deg);
    }
    #menu__toggle:checked + .menu__btn > span::before {
      top: 0;
      transform: rotate(0deg);
    }
    #menu__toggle:checked + .menu__btn > span::after {
      top: 0;
      transform: rotate(90deg);
    }
    #menu__toggle:checked ~ .menu__box {
      left: 0 !important;
    }
    .menu__btn {
      position: relative;
      width: 26px;
      cursor: pointer;
      padding-top: 11px;
      z-index: 1;
    }
    .menu__btn > span,
    .menu__btn > span::before,
    .menu__btn > span::after {
      display: block;
      position: absolute;
      width: 100%;
      height: 2px;
      background-color: #616161;
      transition-duration: 0.25s;
    }
    .menu__btn > span::before {
      content: "";
      top: -8px;
    }
    .menu__btn > span::after {
      content: "";
      top: 8px;
    }
    .menu__box {
      display: block;
      position: fixed;
      top: 0;
      left: -100%;
      width: 300px;
      height: 100%;
      margin: 0;
      padding: 80px 0;
      list-style: none;
      background-color: #eceff1;
      box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);
      transition-duration: 0.25s;
    }
    .menu__item {
      display: block;
      padding: 12px 24px;
      color: #333;
      font-family: "Roboto", sans-serif;
      font-size: 20px;
      font-weight: 600;
      text-decoration: none;
      transition-duration: 0.25s;
    }
    .menu__item:hover {
      background-color: #cfd8dc;
    }
  </style>
</header>
